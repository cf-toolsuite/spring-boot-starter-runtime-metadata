// Generated by delombok at Thu Mar 07 21:47:48 PST 2024
package io.pivotal.app.actuator.runtime.metadata;

import org.apache.commons.lang3.StringUtils;

public class JavaAppDetail {

    private String organization;
    private String space;
    private String appId;
    private String appName;
    private String dropletId;
    private String pomContents;
    private String jars;
    private String springDependencies;

    public static JavaAppDetailBuilder from(JavaAppDetail detail) {
        return JavaAppDetail.builder().organization(detail.getOrganization()).space(detail.getSpace()).appId(detail.getAppId()).appName(detail.getAppName()).dropletId(detail.getDropletId()).pomContents(detail.getPomContents()).jars(detail.getJars()).springDependencies(detail.getSpringDependencies());
    }

    public static String headers() {
        return String.join(",", "organization", "space", "application id", "application name", "droplet id", "pom contents", "jars", "spring dependencies");
    }

    private static String wrap(String value) {
        return value != null ? StringUtils.wrap(value, '\"') : StringUtils.wrap("", '\"');
    }

    public String toCsv() {
        return String.join(",", wrap(getOrganization()), wrap(getSpace()), wrap(getAppId()), wrap(getAppName()), wrap(getDropletId()), wrap(getPomContents()), wrap(getJars()), wrap(getSpringDependencies()));
    }

    @SuppressWarnings("all")
    JavaAppDetail(final String organization, final String space, final String appId, final String appName, final String dropletId, final String pomContents, final String jars, final String springDependencies) {
        this.organization = organization;
        this.space = space;
        this.appId = appId;
        this.appName = appName;
        this.dropletId = dropletId;
        this.pomContents = pomContents;
        this.jars = jars;
        this.springDependencies = springDependencies;
    }


    @SuppressWarnings("all")
    public static class JavaAppDetailBuilder {
        @SuppressWarnings("all")
        private String organization;
        @SuppressWarnings("all")
        private String space;
        @SuppressWarnings("all")
        private String appId;
        @SuppressWarnings("all")
        private String appName;
        @SuppressWarnings("all")
        private String dropletId;
        @SuppressWarnings("all")
        private String pomContents;
        @SuppressWarnings("all")
        private String jars;
        @SuppressWarnings("all")
        private String springDependencies;

        @SuppressWarnings("all")
        JavaAppDetailBuilder() {
        }

        /**
         * @return {@code this}.
         */
        @SuppressWarnings("all")
        public JavaAppDetail.JavaAppDetailBuilder organization(final String organization) {
            this.organization = organization;
            return this;
        }

        /**
         * @return {@code this}.
         */
        @SuppressWarnings("all")
        public JavaAppDetail.JavaAppDetailBuilder space(final String space) {
            this.space = space;
            return this;
        }

        /**
         * @return {@code this}.
         */
        @SuppressWarnings("all")
        public JavaAppDetail.JavaAppDetailBuilder appId(final String appId) {
            this.appId = appId;
            return this;
        }

        /**
         * @return {@code this}.
         */
        @SuppressWarnings("all")
        public JavaAppDetail.JavaAppDetailBuilder appName(final String appName) {
            this.appName = appName;
            return this;
        }

        /**
         * @return {@code this}.
         */
        @SuppressWarnings("all")
        public JavaAppDetail.JavaAppDetailBuilder dropletId(final String dropletId) {
            this.dropletId = dropletId;
            return this;
        }

        /**
         * @return {@code this}.
         */
        @SuppressWarnings("all")
        public JavaAppDetail.JavaAppDetailBuilder pomContents(final String pomContents) {
            this.pomContents = pomContents;
            return this;
        }

        /**
         * @return {@code this}.
         */
        @SuppressWarnings("all")
        public JavaAppDetail.JavaAppDetailBuilder jars(final String jars) {
            this.jars = jars;
            return this;
        }

        /**
         * @return {@code this}.
         */
        @SuppressWarnings("all")
        public JavaAppDetail.JavaAppDetailBuilder springDependencies(final String springDependencies) {
            this.springDependencies = springDependencies;
            return this;
        }

        @SuppressWarnings("all")
        public JavaAppDetail build() {
            return new JavaAppDetail(this.organization, this.space, this.appId, this.appName, this.dropletId, this.pomContents, this.jars, this.springDependencies);
        }

        @Override
        @SuppressWarnings("all")
        public String toString() {
            return "JavaAppDetail.JavaAppDetailBuilder(organization=" + this.organization + ", space=" + this.space + ", appId=" + this.appId + ", appName=" + this.appName + ", dropletId=" + this.dropletId + ", pomContents=" + this.pomContents + ", jars=" + this.jars + ", springDependencies=" + this.springDependencies + ")";
        }
    }

    @SuppressWarnings("all")
    public static JavaAppDetail.JavaAppDetailBuilder builder() {
        return new JavaAppDetail.JavaAppDetailBuilder();
    }

    @SuppressWarnings("all")
    public String getOrganization() {
        return this.organization;
    }

    @SuppressWarnings("all")
    public String getSpace() {
        return this.space;
    }

    @SuppressWarnings("all")
    public String getAppId() {
        return this.appId;
    }

    @SuppressWarnings("all")
    public String getAppName() {
        return this.appName;
    }

    @SuppressWarnings("all")
    public String getDropletId() {
        return this.dropletId;
    }

    @SuppressWarnings("all")
    public String getPomContents() {
        return this.pomContents;
    }

    @SuppressWarnings("all")
    public String getJars() {
        return this.jars;
    }

    @SuppressWarnings("all")
    public String getSpringDependencies() {
        return this.springDependencies;
    }

    @Override
    @SuppressWarnings("all")
    public boolean equals(final Object o) {
        if (o == this) return true;
        if (!(o instanceof JavaAppDetail)) return false;
        final JavaAppDetail other = (JavaAppDetail) o;
        if (!other.canEqual((Object) this)) return false;
        final Object this$organization = this.getOrganization();
        final Object other$organization = other.getOrganization();
        if (this$organization == null ? other$organization != null : !this$organization.equals(other$organization)) return false;
        final Object this$space = this.getSpace();
        final Object other$space = other.getSpace();
        if (this$space == null ? other$space != null : !this$space.equals(other$space)) return false;
        final Object this$appId = this.getAppId();
        final Object other$appId = other.getAppId();
        if (this$appId == null ? other$appId != null : !this$appId.equals(other$appId)) return false;
        final Object this$appName = this.getAppName();
        final Object other$appName = other.getAppName();
        if (this$appName == null ? other$appName != null : !this$appName.equals(other$appName)) return false;
        final Object this$dropletId = this.getDropletId();
        final Object other$dropletId = other.getDropletId();
        if (this$dropletId == null ? other$dropletId != null : !this$dropletId.equals(other$dropletId)) return false;
        final Object this$pomContents = this.getPomContents();
        final Object other$pomContents = other.getPomContents();
        if (this$pomContents == null ? other$pomContents != null : !this$pomContents.equals(other$pomContents)) return false;
        final Object this$jars = this.getJars();
        final Object other$jars = other.getJars();
        if (this$jars == null ? other$jars != null : !this$jars.equals(other$jars)) return false;
        final Object this$springDependencies = this.getSpringDependencies();
        final Object other$springDependencies = other.getSpringDependencies();
        if (this$springDependencies == null ? other$springDependencies != null : !this$springDependencies.equals(other$springDependencies)) return false;
        return true;
    }

    @SuppressWarnings("all")
    protected boolean canEqual(final Object other) {
        return other instanceof JavaAppDetail;
    }

    @Override
    @SuppressWarnings("all")
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        final Object $organization = this.getOrganization();
        result = result * PRIME + ($organization == null ? 43 : $organization.hashCode());
        final Object $space = this.getSpace();
        result = result * PRIME + ($space == null ? 43 : $space.hashCode());
        final Object $appId = this.getAppId();
        result = result * PRIME + ($appId == null ? 43 : $appId.hashCode());
        final Object $appName = this.getAppName();
        result = result * PRIME + ($appName == null ? 43 : $appName.hashCode());
        final Object $dropletId = this.getDropletId();
        result = result * PRIME + ($dropletId == null ? 43 : $dropletId.hashCode());
        final Object $pomContents = this.getPomContents();
        result = result * PRIME + ($pomContents == null ? 43 : $pomContents.hashCode());
        final Object $jars = this.getJars();
        result = result * PRIME + ($jars == null ? 43 : $jars.hashCode());
        final Object $springDependencies = this.getSpringDependencies();
        result = result * PRIME + ($springDependencies == null ? 43 : $springDependencies.hashCode());
        return result;
    }

    @Override
    @SuppressWarnings("all")
    public String toString() {
        return "JavaAppDetail(organization=" + this.getOrganization() + ", space=" + this.getSpace() + ", appId=" + this.getAppId() + ", appName=" + this.getAppName() + ", dropletId=" + this.getDropletId() + ", pomContents=" + this.getPomContents() + ", jars=" + this.getJars() + ", springDependencies=" + this.getSpringDependencies() + ")";
    }
}
